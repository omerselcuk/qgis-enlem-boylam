# -*- coding: utf-8 -*-
"""
/***************************************************************************
 EnlemboylamhesaplayiciDialog
                                 A QGIS plugin
 Enlem ve boylamların ondalık dereceleriyle DMS sistemlerine çevrilmesini sağlar
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2022-04-23
        git sha              : $Format:%H$
        copyright            : (C) 2022 by BASKİ
        email                : omerselcukcetin@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'enboyhesaplayici_dialog_base.ui'))


class EnlemboylamhesaplayiciDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(EnlemboylamhesaplayiciDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

        self.spbEnlemD.valueChanged.connect(self.enlemDMStoDD)
        self.spbEnlemM.valueChanged.connect(self.enlemDMStoDD)
        self.spbEnlemS.valueChanged.connect(self.enlemDMStoDD)
        self.cmbEnlemH.currentTextChanged.connect(self.enlemDMStoDD)
        self.spbEnlemDD.editingFinished.connect(self.enlemDDtoDMS)

        self.spbBoylamD.valueChanged.connect(self.boylamDMStoDD)
        self.spbBoylamM.valueChanged.connect(self.boylamDMStoDD)
        self.spbBoylamS.valueChanged.connect(self.boylamDMStoDD)
        self.cmbBoylamH.currentTextChanged.connect(self.boylamDMStoDD)
        self.spbBoylamDD.editingFinished.connect(self.boylamDDtoDMS)

    def enlemDMStoDD(self):
        iDeg = self.spbEnlemD.value()
        iMin = self.spbEnlemM.value()
        dSec = self.spbEnlemS.value()
        iHem = str(self.cmbEnlemH.currentText())
        iDD = float(iDeg) + iMin/60 + dSec/3600
        if iHem == "G":
            iDD = iDD * -1
        self.spbEnlemDD.setValue(iDD)

    def boylamDMStoDD(self):
        iDeg = self.spbBoylamD.value()
        iMin = self.spbBoylamM.value()
        dSec = self.spbBoylamS.value()
        iHem = str(self.cmbBoylamH.currentText())
        iDD = float(iDeg) + iMin/60 + dSec/3600
        if iHem == "B":
            iDD = iDD * -1
        self.spbBoylamDD.setValue(iDD)


    def enlemDDtoDMS(self):
        iDD = self.spbEnlemDD.value()
        if iDD < 0:
            iHem = "G"
        else:
            iHem = "K"
        iDeg = int(iDD)
        dMin = (iDD - iDeg) * 60
        iMin = int(dMin)
        dSec = (dMin-iMin)*60
        self.spbEnlemD.setValue(abs(iDeg))
        self.spbEnlemM.setValue(abs(iMin))
        self.spbEnlemS.setValue(abs(dSec))
        self.cmbEnlemH.setCurrentText(iHem)

    def boylamDDtoDMS(self):
        iDD = self.spbBoylamDD.value()
        if iDD < 0:
            iHem = "B"
        else:
            iHem = "D"
        iDeg = int(iDD)
        dMin = (iDD - iDeg) * 60
        iMin = int(dMin)
        dSec = (dMin-iMin)*60
        self.spbBoylamD.setValue(abs(iDeg))
        self.spbBoylamM.setValue(abs(iMin))
        self.spbBoylamS.setValue(abs(dSec))
        self.cmbBoylamH.setCurrentText(iHem)

